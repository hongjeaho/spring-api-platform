/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.JUserRoleMapping;
import org.jooq.generated.tables.pojos.UserRoleMappingEntity;
import org.jooq.generated.tables.records.UserRoleMappingRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRoleMappingDao extends DAOImpl<UserRoleMappingRecord, UserRoleMappingEntity, Long> {

    /**
     * Create a new UserRoleMappingDao without any configuration
     */
    public UserRoleMappingDao() {
        super(JUserRoleMapping.USER_ROLE_MAPPING, UserRoleMappingEntity.class);
    }

    /**
     * Create a new UserRoleMappingDao with an attached configuration
     */
    public UserRoleMappingDao(Configuration configuration) {
        super(JUserRoleMapping.USER_ROLE_MAPPING, UserRoleMappingEntity.class, configuration);
    }

    @Override
    public Long getId(UserRoleMappingEntity object) {
        return object.getSeq();
    }

    /**
     * Fetch records that have <code>seq BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UserRoleMappingEntity> fetchRangeOfJSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JUserRoleMapping.USER_ROLE_MAPPING.SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>seq IN (values)</code>
     */
    public List<UserRoleMappingEntity> fetchByJSeq(Long... values) {
        return fetch(JUserRoleMapping.USER_ROLE_MAPPING.SEQ, values);
    }

    /**
     * Fetch a unique record that has <code>seq = value</code>
     */
    public UserRoleMappingEntity fetchOneByJSeq(Long value) {
        return fetchOne(JUserRoleMapping.USER_ROLE_MAPPING.SEQ, value);
    }

    /**
     * Fetch a unique record that has <code>seq = value</code>
     */
    public Optional<UserRoleMappingEntity> fetchOptionalByJSeq(Long value) {
        return fetchOptional(JUserRoleMapping.USER_ROLE_MAPPING.SEQ, value);
    }

    /**
     * Fetch records that have <code>user_seq BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UserRoleMappingEntity> fetchRangeOfJUserSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JUserRoleMapping.USER_ROLE_MAPPING.USER_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_seq IN (values)</code>
     */
    public List<UserRoleMappingEntity> fetchByJUserSeq(Long... values) {
        return fetch(JUserRoleMapping.USER_ROLE_MAPPING.USER_SEQ, values);
    }

    /**
     * Fetch records that have <code>role_seq BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UserRoleMappingEntity> fetchRangeOfJRoleSeq(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JUserRoleMapping.USER_ROLE_MAPPING.ROLE_SEQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_seq IN (values)</code>
     */
    public List<UserRoleMappingEntity> fetchByJRoleSeq(Long... values) {
        return fetch(JUserRoleMapping.USER_ROLE_MAPPING.ROLE_SEQ, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UserRoleMappingEntity> fetchRangeOfJCreatedBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JUserRoleMapping.USER_ROLE_MAPPING.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<UserRoleMappingEntity> fetchByJCreatedBy(Long... values) {
        return fetch(JUserRoleMapping.USER_ROLE_MAPPING.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UserRoleMappingEntity> fetchRangeOfJCreatedTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JUserRoleMapping.USER_ROLE_MAPPING.CREATED_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_time IN (values)</code>
     */
    public List<UserRoleMappingEntity> fetchByJCreatedTime(LocalDateTime... values) {
        return fetch(JUserRoleMapping.USER_ROLE_MAPPING.CREATED_TIME, values);
    }
}
